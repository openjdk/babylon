//usr/bin/env java --enable-preview --source 24 --class-path bldr/bldr.jar "$0" "$@"; exit $?

/*
 * Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

import static bldr.Bldr.*;           // all the helpers are here 
//import static java.nio.file.Files.*; // so we can use isDirectory(path);

void main(String[] args) throws IOException, InterruptedException, URISyntaxException {
     var hatDir = new Root();
     var rleParserDir = hatDir.path().resolve("examples/life/src/main/java/io");
     subDirStream(hatDir.path(), "hat", "examples", "backends", "docs", "bldr")
        .forEach(dir ->
           findTextFiles(dir, "java", "cpp", "h", "hpp", "md")
              .forEach(textFile -> {
                 if (!textFile.hasSuffix("md")
                    && !textFile.path().startsWith(rleParserDir)
                    && !textFile.grep(Pattern.compile("^.*Copyright.*202[4-9].*(Intel|Oracle).*$"))) {
                      System.err.println("ERR MISSING LICENSE " + textFile.path());
                 }
                 textFile.lines().forEach(line -> {
                    if (line.grep(Pattern.compile("^.*\\t.*"))) {
                       System.err.println("ERR TAB " + textFile.path() + ":" + line.line() + "#" + line.num());
                    }
                    if (line.grep(Pattern.compile("^.* $"))) {
                       System.err.println("ERR TRAILING WHITESPACE " + textFile.path() + ":" + line.line() + "#" + line.num());
                    }
                 });
              })
        );
}
